#server:
#  port: 6001
#  context-path: /uc
#
#spring:
#  application:
#    name: uc
#  datasource:
#    url: jdbc:mysql://192.168.1.110:3306/coin-exchange-server?useSSL=false&serverTimezon=UTC&allowPublicKeyRetrieval=false
#    username: ${spring.datasource.username}
#    password: ${spring.datasource.password}
#    driver-class-name: com.mysql.jdbc.Driver
#    type: com.alibaba.druid.pool.DruidDataSource
#    druid:
#      initialSize: 10
#      minIdle: 10
#      maxActive: 200
#      maxWait: 6000
#      timeBetweenEvictionRunsMillis: 6000
#      minEvictableIdleTimeMillis: 6000
#      validationQuery: SELECT 1
#      testWhileIdle: true
#      testOnBorrow: false
#      testOnReturn: false
#      poolPreparedStatements: true
#      maxPoolPreparedStatementPerConnectionSize: 20
#      filters: stat,wall,log4j
#      web-stat-filter:
#        enabled: true
#        url-pattern: /*
#        exclusions: /druid/*,*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico
#        session-stat-enable: true
#        session-stat-max-count: 10
#        principal-session-name: session_name
#        principal-cookie-name: cookie_name
#      stat-view-servlet:
#        enabled: true
#        url-pattern: /druid/*
#        reset-enable: false
#        login-username: ${druidlogin-username}
#        login-password: ${druidlogin-password}
#        allow: ""
#        deny: ""
#      aop-patterns: "com.lcf.service.*"
#  data:
#    mongodb:
#      uri: ${spring.data.mongodb.uri}
#      database: ${spring.data.mongodb.database}
#  redis:
#    host: ${spring.redis.host}
#    port: ${spring.redis.port}
#    pool:
#      max-active: 300
#      max-wait: 60000
#      max-idle: 100
#      min-idle: 20
#    timeout: 30000
#  kafka:
#    bootstrap-servers: ${spring.kafka.bootstrap-servers}
#    producer:
#      retries: 0
#      batch:
#        size: 256
#      linger: 1
#      buffer:
#        memory: 1048576
#    consumer:
#      enable:
#        auto:
#          commit: false
#      session:
#        timeout: 15000
#      auto:
#        commit:
#          interval: 100
#        offset:
#          reset: earliest
#      group:
#        id: default-group
#      concurrency: 9
#      maxPollRecordsConfig: 50
#  mail:
#    host: ${spring.mail.host}
#    port: ${spring.mail.port}
#    username: ${spring.mail.username}
#    password: ${spring.mail.password}
#    properties:
#      mail:
#        smtp:
#          socketFactory:
#            class: javax.net.ssl.SSLSocketFactory
#          auth: true
#          starttls:
#            enable: true
#            required: true
#
#aliyun:
#  accessKeyId: ${aliyun.accessKeyId}
#  accessKeySecret: ${aliyun.accessKeySecret}
#  ossEndpoint: ${aliyun.ossEndpoint}
#  ossBucketName: ${aliyun.ossBucketName}
#  mail-sms:
#    region: ${aliyun.mail-sms.region}
#    access-key-id: ${aliyun.mail-sms.access-key-id}
#    access-secret: ${aliyun.mail-sms.access-secret}
#    from-address: ${aliyun.mail-sms.from-address}
#    from-alias: ${aliyun.mail-sms.from-alias}
#    sms-sign: ${aliyun.mail-sms.sms-sign}
#    sms-template: ${aliyun.mail-sms.sms-template}
#    email-tag: ${aliyun.mail-sms.email-tag}
#
#sms:
#  driver: ${sms.driver}
#  gateway: ${sms.gateway}
#  username: ${sms.username}
#  password: ${sms.password}
#  sign: ${sms.sign}
#  internationalGateway: ${sms.internationalGateway}
#  internationalUsername: ${sms.internationalUsername}
#  internationalPassword: ${sms.internationalPassword}
#
#access:
#  key:
#    id: ${access.key.id}
#    secret: ${access.key.secret}
#
#water:
#  proof:
#    app:
#      id: "2076680797"
#      secret:
#        key: "0eVVmPN6KW4aGPDjGW73YpQ**"
#
#es:
#  username: ${es.username}
#  password: ${es.password}
#  mine:
#    index: ${es.mine.index}
#    type: ${es.mine.type}
#  public:
#    ip: ${es.public.ip}
#  private:
#    ip: ${es.private.ip}
#  port: ${es.port}